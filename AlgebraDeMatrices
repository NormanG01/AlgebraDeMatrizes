import java.util.Scanner;

public class AlgebraDeMatrices {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int intentos = 0;
        final int MAX_INTENTOS = 3;

        while (intentos < MAX_INTENTOS) {
            System.out.println("Seleccione una operación de álgebra de matrices:");
            System.out.println("1. Sumar matrices");
            System.out.println("2. Restar matrices");
            System.out.println("3. Multiplicar matrices");
            System.out.println("4. Multiplicar matriz por escalar");
            int opcion = scanner.nextInt();

            switch (opcion) {
                case 1:
                    sumarMatrices();
                    break;
                case 2:
                    restarMatrices();
                    break;
                case 3:
                    multiplicarMatrices();
                    break;
                case 4:
                    multiplicarPorEscalar();
                    break;
                default:
                    System.out.println("Opción no válida.");
            }

            intentos++;
        }

        System.out.println("Número máximo de intentos alcanzado. Saliendo del programa.");
        scanner.close();
    }

    public static void sumarMatrices() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Ingrese las dimensiones de la primera matriz (filas columnas): ");
        int filas1 = scanner.nextInt();
        int columnas1 = scanner.nextInt();
        double[][] matriz1 = new double[filas1][columnas1];

        // Ingresar elementos de la primera matriz
        for (int i = 0; i < filas1; i++) {
            for (int j = 0; j < columnas1; j++) {
                System.out.println("Ingrese el elemento en la posición [" + i + "][" + j + "]: ");
                matriz1[i][j] = scanner.nextDouble();
            }
        }

        System.out.println("Ingrese las dimensiones de la segunda matriz (filas columnas): ");
        int filas2 = scanner.nextInt();
        int columnas2 = scanner.nextInt();
        double[][] matriz2 = new double[filas2][columnas2];

        // Ingresar elementos de la segunda matriz
        for (int i = 0; i < filas2; i++) {
            for (int j = 0; j < columnas2; j++) {
                System.out.println("Ingrese el elemento en la posición [" + i + "][" + j + "]: ");
                matriz2[i][j] = scanner.nextDouble();
            }
        }

        if (filas1 == filas2 && columnas1 == columnas2) {
            double[][] resultado = new double[filas1][columnas1];
            for (int i = 0; i < filas1; i++) {
                for (int j = 0; j < columnas1; j++) {
                    resultado[i][j] = matriz1[i][j] + matriz2[i][j];
                }
            }

            // Imprimir resultado
            System.out.println("Resultado de la suma de matrices:");
            for (int i = 0; i < filas1; i++) {
                for (int j = 0; j < columnas1; j++) {
                    System.out.print(resultado[i][j] + " ");
                }
                System.out.println();
            }
        } else {
            System.out.println("No se pueden sumar matrices con dimensiones diferentes.");
        }
    }
    public static void restarMatrices() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Ingrese las dimensiones de la primera matriz (filas columnas): ");
        int filas1 = scanner.nextInt();
        int columnas1 = scanner.nextInt();
        double[][] matriz1 = new double[filas1][columnas1];

        // Ingresar elementos de la primera matriz
        for (int i = 0; i < filas1; i++) {
            for (int j = 0; j < columnas1; j++) {
                System.out.println("Ingrese el elemento en la posición [" + i + "][" + j + "]: ");
                matriz1[i][j] = scanner.nextDouble();
            }
        }

        System.out.println("Ingrese las dimensiones de la segunda matriz (filas columnas): ");
        int filas2 = scanner.nextInt();
        int columnas2 = scanner.nextInt();
        double[][] matriz2 = new double[filas2][columnas2];

        // Ingresar elementos de la segunda matriz
        for (int i = 0; i < filas2; i++) {
            for (int j = 0; j < columnas2; j++) {
                System.out.println("Ingrese el elemento en la posición [" + i + "][" + j + "]: ");
                matriz2[i][j] = scanner.nextDouble();
            }
        }

        if (filas1 == filas2 && columnas1 == columnas2) {
            double[][] resultado = new double[filas1][columnas1];
            for (int i = 0; i < filas1; i++) {
                for (int j = 0; j < columnas1; j++) {
                    resultado[i][j] = matriz1[i][j] - matriz2[i][j];
                }
            }

            // Imprimir resultado
            System.out.println("Resultado de la resta de matrices:");
            for (int i = 0; i < filas1; i++) {
                for (int j = 0; j < columnas1; j++) {
                    System.out.print(resultado[i][j] + " ");
                }
                System.out.println();
            }
        } else {
            System.out.println("No se pueden restar matrices con dimensiones diferentes.");
        }
    }

    public static void multiplicarMatrices() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Ingrese las dimensiones de la primera matriz (filas columnas): ");
        int filas1 = scanner.nextInt();
        int columnas1 = scanner.nextInt();
        double[][] matriz1 = new double[filas1][columnas1];

        // Ingresar elementos de la primera matriz
        for (int i = 0; i < filas1; i++) {
            for (int j = 0; j < columnas1; j++) {
                System.out.println("Ingrese el elemento en la posición [" + i + "][" + j + "]: ");
                matriz1[i][j] = scanner.nextDouble();
            }
        }

        System.out.println("Ingrese las dimensiones de la segunda matriz (filas columnas): ");
        int filas2 = scanner.nextInt();
        int columnas2 = scanner.nextInt();
        double[][] matriz2 = new double[filas2][columnas2];

        // Ingresar elementos de la segunda matriz
        for (int i = 0; i < filas2; i++) {
            for (int j = 0; j < columnas2; j++) {
                System.out.println("Ingrese el elemento en la posición [" + i + "][" + j + "]: ");
                matriz2[i][j] = scanner.nextDouble();
            }
        }

        if (columnas1 == filas2) {
            double[][] resultado = new double[filas1][columnas2];
            for (int i = 0; i < filas1; i++) {
                for (int j = 0; j < columnas2; j++) {
                    resultado[i][j] = 0;
                    for (int k = 0; k < columnas1; k++) {
                        resultado[i][j] += matriz1[i][k] * matriz2[k][j];
                    }
                }
            }

            // Imprimir resultado
            System.out.println("Resultado de la multiplicación de matrices:");
            for (int i = 0; i < filas1; i++) {
                for (int j = 0; j < columnas2; j++) {
                    System.out.print(resultado[i][j] + " ");
                }
                System.out.println();
            }
        } else {
            System.out.println("No se pueden multiplicar matrices con dimensiones incorrectas.");
        }
    }

    public static void multiplicarPorEscalar() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Ingrese las dimensiones de la matriz (filas columnas): ");
        int filas = scanner.nextInt();
        int columnas = scanner.nextInt();
        double[][] matriz = new double[filas][columnas];

        // Ingresar elementos de la matriz
        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                System.out.println("Ingrese el elemento en la posición [" + i + "][" + j + "]: ");
                matriz[i][j] = scanner.nextDouble();
            }
        }

        System.out.println("Ingrese el valor del escalar: ");
        double escalar = scanner.nextDouble();

        double[][] resultado = new double[filas][columnas];
        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                resultado[i][j] = matriz[i][j] * escalar;
            }
        }

        // Imprimir resultado
        System.out.println("Resultado de la multiplicación de matriz por escalar:");
        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                System.out.print(resultado[i][j] + " ");
            }
            System.out.println();
          public static void calcularTraza() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Ingrese las dimensiones de la matriz cuadrada (filas y columnas): ");
        int n = scanner.nextInt();
        double[][] matriz = new double[n][n];

        // Ingresar elementos de la matriz
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                System.out.println("Ingrese el elemento en la posición [" + i + "][" + j + "]: ");
                matriz[i][j] = scanner.nextDouble();
            }
        }

        double traza = 0;
        for (int i = 0; i < n; i++) {
            traza += matriz[i][i];
        }

        System.out.println("La traza de la matriz es: " + traza);
    }

    public static void calcularDeterminante() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Ingrese las dimensiones de la matriz cuadrada (filas y columnas): ");
        int n = scanner.nextInt();
        double[][] matriz = new double[n][n];

        // Ingresar elementos de la matriz
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                System.out.println("Ingrese el elemento en la posición [" + i + "][" + j + "]: ");
                matriz[i][j] = scanner.nextDouble();
            }
        }

        double determinante = calcularDeterminanteRecursivo(matriz);
        System.out.println("El determinante de la matriz es: " + determinante);
    }

    public static double calcularDeterminanteRecursivo(double[][] matriz) {
        int n = matriz.length;
        if (n == 1) {
            return matriz[0][0];
        }
        if (n == 2) {
            return (matriz[0][0] * matriz[1][1] - matriz[0][1] * matriz[1][0]);
        }

        double determinante = 0;
        for (int i = 0; i < n; i++) {
            determinante += matriz[0][i] * cofactor(matriz, 0, i);
        }

        return determinante;
    }

    public static double cofactor(double[][] matriz, int fila, int columna) {
        int n = matriz.length;
        double[][] submatriz = new double[n - 1][n - 1];
        int subfila = 0;
        int subcolumna = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (i != fila && j != columna) {
                    submatriz[subfila][subcolumna] = matriz[i][j];
                    subcolumna++;
                    if (subcolumna == n - 1) {
                        subcolumna = 0;
                        subfila++;
                    }
                }
            }
        }
        return Math.pow(-1, fila + columna) * calcularDeterminanteRecursivo(submatriz);
    }

    public static void transponerMatriz() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Ingrese las dimensiones de la matriz (filas y columnas): ");
        int filas = scanner.nextInt();
        int columnas = scanner.nextInt();
        double[][] matriz = new double[filas][columnas];

        // Ingresar elementos de la matriz
        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                System.out.println("Ingrese el elemento en la posición [" + i + "][" + j + "]: ");
                matriz[i][j] = scanner.nextDouble();
            }
        }

        double[][] matrizTranspuesta = new double[columnas][filas];

        for (int i = 0; i < filas; i++) {
      }
    }
  }
}
       
